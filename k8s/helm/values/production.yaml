# Default values for prerelease.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2
revisionHistoryLimit: 3
    
# vaultSecretStoreName is the name of the ClusterSecretStore resource to pull secret credentials
vaultSecretStoreName: "rcsb-vault"

# Define container liveness and readiness checks
# A Pod is considered "live" when it is able to respond to client requests.
# A Pod is considered "ready" when it has completed initialization and should be one of the backends for a K8s Service resource.
livenessProbe:
  enable: false
  initialDelaySeconds: 30
  periodSeconds: 30
  failureThreshold: 6
  http:
    path: /
readinessProbe:
  enable: false
  initialDelaySeconds: 30
  periodSeconds: 30
  failureThreshold: 6
  http:
    path: /api/alive


image:
  repository: "harbor.devops.k8s.rcsb.org/rcsb/rcsb-chemsearch"
  pullPolicy: Always
  tag: "production"

imagePullSecrets: "harbor-docker-registry-conf"

deploymentStrategy:
  #https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  #Type is either RollingUpdate or Recreate
  type: "RollingUpdate"
  #For rolling update, what percentage of total pods can be created above desired amount
  maxSurge: 25%
  #For rolling update, what percentage of total pods can be brought down to update
  maxUnavailable: 25%

podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 80
  containerPort: 8000

resources:
  limits:
    cpu: 256m
    memory: 8Gi
    ephemeral-storage: "9G"
  requests:
    cpu: 4m
    memory: 1Gi
    ephemeral-storage: "9G"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 20
  targetCPUUtilizationPercentage: 80

# externalSecret defines values for the ExternalSecret resource if your application needs to pull values
# from an external Vault service.
externalSecret:
  enabled: true
  secretStoreRefName: "rcsb-vault"
  targets:
    - secretName: oe-license-file
      data:
        - secretKey: oe-license.txt
          remoteRef:
            key: openeye/license
            property: license

# useSecretsVolume if your application will mount a secret from the Vault service as a file on the filesystem.
useSecretsVolume: true
secretVolumes:
  - name: oe-license
    mountPath: /home/ubuntu/.secrets
    filename: oe-license.txt
    secretName: oe-license-file

podEnvVars:
  - name: CHEM_SEARCH_DATA_HOSTNAME
    value: bl-west.rcsb.org
  - name: CHEM_SEARCH_DATA_PATH
    value: 4-coastal
  - name: OE_LICENSE
    value: /home/ubuntu/oe-license/oe-license.txt
